Lab: "Google Cloud Fundamentals: Getting Started with Compute Engine"
Lab objective:
                - Create a Compute Engine virtual machine using the gcloud command-line interface,
                - Connect between the two instances.


Creating virtual machine using the gcloud command line:
    1. In GCP console, on the top right toolbar, click the Open Cloud Shell button
    2. click continue and Google cloud shell will provides you with command-line 
        access to your cloud resources directly from your browser.
    3. Fist start by displaying the list of all zones in the region to which qwiklabs assigned you:

            gcloud compute zones list | grep us-central1 (the second part of the is the region assigned by qwiklabs)
            it should be something like this:
            us-central1-c              us-central1 
            us-central1-a              us-central1 
            us-central1-f              us-central1 
            us-central1-b              us-central1 
    
    4. Choose a zone from that list above
    5. Set the selected zone using the following command:

           gcloud config set compute/zone us-central1-a

    6. To create a VM instance called my-vm-1 in that zone(Please remove the bar slash when typing the command)

            gcloud compute instances create "my-vm-1" \
                    --machine-type "n1-standard-1" \
                    --image-project "debian-cloud" \
                    --image "debian-9-stretch-v20190213" \
                    --subnet "default"

             This commad allow http traffic on my-vm-1 

            gcloud compute --project=qwiklabs-gcp-02-a6442981f677 
            firewall-rules create default-allow-http --direction=INGRESS 
            --priority=1000 --network=default --action=ALLOW --rules=tcp:80 
            --source-ranges=0.0.0.0/0 --target-tags=http-server

    7. Repeat the step 5 and 6 to set the zone to us-central1-b and create the second VM instance called my-vm-2 
        (wait about 2 to 3 minutes for the VM to be available)

     Connection between the VM instances: 
        
    8. On the root directory, Use the ssh command to connect to my-vm-2,  
    
        ssh my-vm-2 

        If you are prompted about whether you want to continue connecting to a host with unknown authenticity, 
        enter yes to confirm that you do.
    
    9. Check the connectivity between the two host, from my-vm-2 use the ping command:

        ping my-vm-1
    10. Press Ctrl+C to abort the ping command.

    11. From my-vm-2 root folder, use ssh command to access my-vm-1

            ssh my-vm-1
    
    12. At the command prompt on my-vm-1, install the Nginx web server:

            sudo apt-get install nginx-light -y
    
    13. Use the nano text editor to add a custom message to the home page of the web server:

            sudo nano /var/www/html/index.nginx-debian.html

    14. Use the arrow keys to move the cursor to the line just below the h1 header. Add text like this, 
    and replace YOUR_NAME with your name:

        Hi from Patient
    
    15. Press Ctrl+O and then press Enter to save your edited file, 
        and then press Ctrl+X to exit the nano text editor.

    16. Confirm that the web server is serving your new page. 
        At the command prompt on my-vm-1, execute this command:

            curl http://localhost/

    17. To exit the command prompt on my-vm-1, execute this command:

            exit (Back to my-vm-2)
    18. To confirm that my-vm-2 can reach the web server on my-vm-1, 
            at the command prompt on my-vm-2, execute this command:

            curl http://my-vm-1/

    20. Copy the External IP address for my-vm-1 and paste it into the address 
        bar of a new browser tab. You will see your web server's home page, including your custom text.



